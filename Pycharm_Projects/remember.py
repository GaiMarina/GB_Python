
# !!! Ввод списка целиком через пробел. 

# entered_list = input().split() 
"""
entered_list = input("Введите список чисел, разделенных пробелом: ").split() 

print("Введенный список:", entered_list) 
# Введенный список: ['1', ' 2', ' 3', ' 4', ' 5']
"""
#============================ 

# Повторный запрос на ввод заданное количество раз.

"""
for i in range(5): 
    i = int(input('Введите число: '))

"""

#===========================

"""
# Замена символа конца строки.

a = int(input('Введите число N '))

for i in range(-a, a + 1):   
    print(i, end = ' ')
"""

#===========================
"""
# функция round

a = 1.312312
b = 3
c = (a * b)
d = round(a * b, 5) # количество знаков после запятой. 
                    # round округляет по мат.правилам!!!
print(c)
print(d)

# f

f"{8 / 7:.4f}" # '1.1429'

f"{8 / 7:.4}"  # '1.143' Без f - просто 4 цифры, а не после запятой.
"""
#=============================
"""
# Ввод/вывод данных

print('Введите a')
a = input()

print('Введите b')
b = input()

print(a, b)

print('{} {}'.format(a,b))

print(f'{a} {b}')
"""
#=============================
"""
text = 'съешь ещё этих мягких французских булок'
print(text[0:len(text):6])  # сеикакл           C нуля по всей длине с шагом 6.
print(text[::6])            # сеикакл           шаг - 6
"""
#=============================
"""
exit() # функция позволяет не выполнять код, записанный далее в скрипте.
"""
#=============================
"""
# копии

new_per = per - как два ярлыка

new_per = per[:] - не глубокая

# для вложенных списков, глубокая копия deep copy

import copy

new_per = copy.deepcopy(per)
"""
#============================
"""
# вложенный список с неглубокой копией

nested_list = [[1, 2], [3, 4]]
nested_list = nested_list[:]
nested_list[0].append(5)
print(nested_list)
"""
#============================
"""
# вложенный список с deepcopy

nested_list = [[1, 2], [3, 4]]

nested_list[0].append(5)
print(nested_list)
new_list = copy.deepcopy(nested_list)
new_list[0].append(5)
print(new_list)
"""
#============================

# отсекаем все, что после запятой

a = 0.987987
a = int(a)
print(a)

# оставляем то, что после запятой

n = a % 1
print(n)

#===========================

# перемешали список

import random 
a = [1, 2, 3, 4, 10, 11, 23, 56] 
random.shuffle(a, random.random) 
print(a)

#======================

# неизменяемые множества

a = {1, 2, 3, 5, 8}
s = frozenset(a)                # frozenset
print(s)

#==================

# математически - нужное кол-во знаков после запятой.

a = 555.00089005
d = 3 # количество знаков после запятой.
a = float(int(a * 10 ** d + 0.5)) # + 0.5, чтобы правильно округлялось.
a = a / 10 ** d
print(a)

#======================

# a, b, c = list(map(int, input('Введите три числа через пробел: ').split())) # Сами распакуются.

#==========================

# вывод уникальных значений
from itertools import groupby

x = list('AAAABBBCCDAABBB')

# Удаление повторяющихся значений в списке
[k for k, g in groupby(x)] 
# ['A', 'B', 'C', 'D', 'A', 'B']

# вывод уникальных значений
[k for k, g in groupby(sorted(x))] 
# ['A', 'B', 'C', 'D']
#==========================

#Форматирование с помощью %

'Hello, %s!' % 'Vasya'
# 'Hello, Vasya!'

'%d %s, %d %s' % (6, 'bananas', 10, 'lemons')
# '6 bananas, 10 lemons'

#==========================

fruits = ["apple", "banana", "cherry", "kiwi", "mango"]

newlist = [x if x != "banana" else "orange" for x in fruits]

print(newlist)
# ['apple', 'orange', 'cherry', 'kiwi', 'mango'] 

# ============================

# Вместо .readlines() др. способы в режиме чтения:
# .read() возвращает строки ==> можно .read().split() Можно .read().split('\n')
# .readline() прочитает только одну строку.
# Чтение физически перемещает курсор. Одно и то же чтение подряд, читает уже следующую (например, строку)

# ============================


# l_ist = ['d', 'e', 'w', 'q']

# for i, v in enumerate(l_ist):
#     print(i, v)

# ============================

# добавляем нумерацию:

# l_ist = ['d', 'e', 'w', 'q']

# for i, v in enumerate(l_ist, 100):
#     print(i, v)

# ==============================

# Выводим красоту

# l_ist = ['d', 'e', 'w', 'q']

# for i, v in enumerate(l_ist, 1):
#     print(f'{i}) {v}')  # i уберем, выведет только данные без номеров.
