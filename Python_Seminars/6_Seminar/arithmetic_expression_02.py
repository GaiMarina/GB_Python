# # Напишите программу вычисления арифметического выражения заданного строкой. 
# # Используйте операции +,-,/,*. приоритет операций стандартный. 
# #     *Пример:* 
# #     2+2 => 4;    
# #     1+2*3 => 7;  
# #     1-2*3 => -5;  
# #     - Добавьте возможность использования скобок, меняющих приоритет операций.    
# #         *Пример:*   
# #         1+2*3 => 7;      
# #         (1+2)*3 => 9;
# # https://ru.wikipedia.org/wiki/Обратная_польская_запись 3 4 + вместо 3 + 4

# Алгоритм
# Пока есть ещё символы для чтения:

# Читаем очередной символ.
# Если символ является числом или постфиксной функцией (например, ! — факториал), 
# добавляем его к выходной строке.
# Если символ является префиксной функцией (например, sin — синус), помещаем его в стек.
# Если символ является открывающей скобкой, помещаем его в стек.
# Если символ является закрывающей скобкой:
# До тех пор, пока верхним элементом стека не станет открывающая скобка, 
# выталкиваем элементы из стека в выходную строку. При этом открывающая скобка удаляется из стека, 
# но в выходную строку не добавляется. Если стек закончился раньше, чем мы встретили открывающую 
# скобку, это означает, что в выражении либо неверно поставлен разделитель, либо не согласованы скобки.
# Если существуют разные виды скобок, появление непарной скобки также свидетельствует об ошибке. 
# Если какие-то скобки одновременно являются функциями (например, [x] — целая часть), 
# добавляем к выходной строке символ этой функции.
# Если символ является бинарной операцией о1, тогда:
# 1) пока на вершине стека префиксная функция…
# … ИЛИ операция на вершине стека приоритетнее или такого же уровня приоритета как o1
# … ИЛИ операция на вершине стека левоассоциативная с приоритетом как у o1
# … выталкиваем верхний элемент стека в выходную строку;
# 2) помещаем операцию o1 в стек.
# Когда входная строка закончилась, выталкиваем все символы из стека в выходную строку. 
# В стеке должны были остаться только символы операций; если это не так, 
# значит в выражении не согласованы скобки.

input_list = input("Введите выражение: ").split()
output = []
stack_list = []
for elem in input_list:
    if elem.isdigit(): 
        output.append(elem)
    elif elem == "(": # помещаем в стек (первый вошел, последний вышел)
        stack_list.append(elem)
    elif elem == ")":
        while stack_list and stack_list[-1] != "(":
            output.append(stack_list.pop())  # забираем последний элемент из stack и помещаем в output
        if not stack_list:
            print("Несогласованные скобки")
            exit() 
        stack_list.pop()
    elif elem in ["*", "/"]:
        while stack_list and stack_list[-1] in ["*", "/"]:
            output.append(stack_list.pop()) 
        stack_list.append(elem)
    elif elem in ["+", "-"]: 
        while stack_list and stack_list[-1] in ["*", "/", "+", "-"]:
            output.append(stack_list.pop()) 
        stack_list.append(elem)
    else: 
        print("Нераспознанный знак")
        exit()
while stack_list: 
    if stack_list[-1] not in ["*", "/", "+", "-"]:
        print("Несогласованные скобки")
        exit() 
    output.append(stack_list.pop())
print(output)
res = []
for elem in output: 
    if elem.isdigit():
        res.append(int(elem))
    else: 
        b = res.pop()
        a = res.pop()
        if elem == "+":
            res.append(a + b)
        elif elem == "-":
            res.append(a - b)
        elif elem == "*": 
            res.append(a * b)
        elif elem == "/": 
            res.append(a / b)

print(res[0])
